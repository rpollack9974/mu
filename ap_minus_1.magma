//Looks at T_p acting on S_k(SL_2(Z)) for (p,k) an irregular pair, and checks to see if there is any 
//eigenvalue defined over Z_p which is congruent to 1 mod p^2
function val_of_ap_minus_1(minp,maxp)
	filename := "val_of_ap_minus_1.txt";
	ps := [];
	for q in [minp..maxp] do
		if IsPrime(q) then
			ps := ps cat [q];
		end if;
	end for;
	for j in [1..#ps] do
		p := ps[j];
		for k in [2..p] do
			if k mod 2 eq 0 and Valuation(BernoulliNumber(k),p) gt 0 then
				print "working with ",[p,k];
				PrintFile(filename,"Working with irregular pair (" cat IntegerToString(p) cat "," cat IntegerToString(k) cat ")");
				M := CuspidalSubspace(ModularSymbols(1,k,1));
				S<y> := PolynomialRing(pAdicField(p,3));
				f := S!(HeckePolynomial(M,p));
				rs := Roots(f);
				for i in [1..#rs] do
					s := rs[i][1];
					e := Valuation(s-1);
					if e gt 0 then
						print "There is a root congruent to 1 modulo p ^",e;
						PrintFile(filename,"  There is a root congruent to 1 modulo p^" cat IntegerToString(e));
					end if;
				end for;
			end if;
		end for;
	end for;

	return "Done";
end function;


